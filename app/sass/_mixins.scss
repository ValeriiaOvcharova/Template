@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    src: url('#{$file-path}.woff2') format('woff2'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.eot') format('truetype');
  }
}
@mixin font ($font-size, $line-height, $font-family) {
  font-size: $font-size;
  line-height: $line-height;
  font-family: $font-family, sans-serif;
}
@mixin pseudo {
  content: '';
  position: absolute;
  box-sizing: border-box;
}

/*after-xs, after-sm, after-md, xl - used for mobile first markup*/
$screen-sm: 576px;
$screen-md: 768px;
$screen-lg: 992px;
$screen-xl: 1370px;
$screen-xs-max: ($screen-sm - 1);
$screen-sm-max: ($screen-md - 1);
$screen-md-max: ($screen-lg - 1);
$screen-lg-max: ($screen-xl - 1);

@mixin media($media) {
  @if $media == xs {
    @media (max-width: $screen-xs-max) {
      @content;
    }      
  }
  @else if $media == after-xs {
    @media (min-width: $screen-sm) {
      @content;
    }
  }
  @else if $media == sm {
    @media (max-width: $screen-sm-max) { 
      @content;
    }
  }
  @else if $media == after-sm {
    @media (min-width: $screen-md) {
      @content;
    }
  }
  @else if $media == md { 
    @media (max-width: $screen-md-max) {
      @content;
    }
  }
  @else if $media == after-md {
    @media (min-width: $screen-lg) {
      @content;
    }
  }
  @else if $media == lg {
    @media (max-width: $screen-lg-max) {
      @content;
    }
  }
  @else if $media == xl {
    @media (min-width: $screen-xl) {
      @content;
    }
  }
}

// LEFT RIGHT AND BOTTOM PANNELS FOR IMG-WRAPPER

@mixin location-panel ($side, $location, $bottom: false) {
  @if $side != false and $location != false {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;

    &:before, &:after {
      left: 0;
      right: 0;
    }

    &:before {    
      top: 0;
      bottom: 25px;
      
    }
    &:after {
      top: 25px;
      bottom: 0;      
    }

    @if $side == left {
      right: 100%;      
      transform: translateX(110%);

      &:before {
        transform: skewY(8deg);
        border-radius: 15px 0 0 0;
      } 
      &:after {
        transform: skewY(-8deg);
        border-radius: 0 0 0 15px;
      } 
      @if $location == top {
        top: 0;
      }  
      @else if $location == bottom {
        bottom: 0;
      }
    }
    
    @else if $side == right {
      left: 100%;
      transform: translateX(-110%);

      &:before {
        transform: skewY(-8deg);
        border-radius: 0 15px 0 0;
      } 
      &:after {
        transform: skewY(8deg);
        border-radius: 0 0 15px 0;
      } 
      @if $location == top {
        top: 0;
      }  
      @else if $location == bottom {
        bottom: 0;
      }
    }
    @if $location == all {
      top: 0;
      bottom: 0;
      
      &:before {    
        bottom: 40%;
      }
      &:after {
        top: 40%;   
      }
      @if $side == left {
        &:before, &:after {
          transform-origin: 10%;
          right: -500%;
        }
        &:before {    
          transform: skewY(16deg);                 
        }
        &:after {
          transform: skewY(-16deg); 
        }
      }
      @else if $side == right {
        &:before, &:after {
          transform-origin: 90%;
          left: -500%;
        }    
        &:before {    
          transform: skewY(-16deg);                 
        }
        &:after {
          transform: skewY(16deg); 
        }
      }
    }
  } 

  @if $bottom == true {
    display: block;
    top: 100%;
    left: 0;
    right: 0;
    transform: translateY(-110%);    
    
    &:before, &:after {
      top: 0;
      bottom: 0;
    }
    &:before {
      border-radius: 0 0 0 15px;   
      left: 0;
      right: 50px;
      transform: skewX(-15deg);
    }
    &:after {
      border-radius: 0 0 15px 0;
      left: 50px;
      right: 0;   
      transform: skewX(15deg);
    }
  }
}
@mixin trapeze-border ($position, $deg, $border: $color-border) {
  &:before, &:after {
    border-color: $border;
    border-style: solid;
  }
  @if $position == vertical {
    &:before, &:after {
      top: 0;
      bottom: 0;
    }
    &:before {
      left: 0;
      right: 38%;
      transform: skewX(#{$deg});
      border-width: 1px 0 1px 1px;
      border-radius: 15px 0 0 15px;
    }
    &:after {
      left: 38%;
      right: 0;
      transform: skewX(-#{$deg});
      border-width: 1px 1px 1px 0;
      border-radius: 0 15px 15px 0;
    }
  }
  @if $position == horizontal {
    &:before, &:after {
      left: 0;
      right: 0;
    }
    &:before {
      top: 0;
      bottom: 38%;
      transform: skewY(-#{$deg});
      border-width: 1px 1px 0 1px;
      border-radius: 15px 15px 0 0;
    }
    &:after {
      top: 38%;
      bottom: 0;
      transform: skewY(#{$deg});
      border-width: 0 1px 1px 1px;
      border-radius: 0 0 15px 15px;
    }
  }
}

@mixin admin-shadow {
  box-shadow: 0px 34px 123.69px 9.31px rgba(198, 205, 231, 0.38);
}
@mixin ball-shadow {
  &:before {
    @include pseudo;
    left: 0;
    right: 0;
    margin: 0 auto;
    bottom: 5%;
    width: 51%;
    height: 51%;
    border-radius: 50%;
    box-shadow: 0px 49px 62.31px 4.69px rgba(0, 0, 0, 0.23);
    z-index: -10;
  }
}

@mixin button ($color-border: $color-border, $color: $color-icon, $dashed: false, $radius: 1.5625rem, $size: true, $hover: true, $width: $btn-width, $height: $btn-height, $font-size: 1.375rem) {
  @if $dashed == true {
    border: 1px dashed $color-border;
  } @else {
    border: 1px solid $color-border;
  }
  @if $size == true {
    width: $width;
    height: $height;
  }  
  border-radius: $radius;
  color: $color;
  font-size: $font-size;
  transition: .3s;

  @if $hover == true {
    &:hover {
      border-color: $black;
      color: $black;
    }
  }    
}
